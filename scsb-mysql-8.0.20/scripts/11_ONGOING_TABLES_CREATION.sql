USE `recap`;

DROP TABLE IF EXISTS `PENDING_REQUEST_T`;
-- -----------------------------------------------------
-- Table `PENDING_REQUEST_T`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PENDING_REQUEST_T` (
  `PENDING_ID`          INT           NOT NULL AUTO_INCREMENT,
  `ITEM_ID`             INT           NOT NULL,
  `REQUEST_ID`     INT           NOT NULL,
  `REQUEST_CREATED_DATE`        DATETIME NOT NULL,
  PRIMARY KEY (`PENDING_ID`),
  INDEX `ITEM_ID_FK_idx` (`ITEM_ID` ASC),
  INDEX `REQUEST_ID_FK_idx` (`REQUEST_ID` ASC),
  CONSTRAINT `PENDING_ITEM_ID_FK`     FOREIGN KEY (`ITEM_ID`)           REFERENCES `ITEM_T` (`ITEM_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `PENDING_REQUEST_ID_FK`  FOREIGN KEY (`REQUEST_ID`) REFERENCES `REQUEST_ITEM_T` (`REQUEST_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION
)
  ENGINE = InnoDB;

CREATE TABLE IF NOT EXISTS `JOB_PARAM_T` (
  `RECORD_NUM`    INT  NOT NULL AUTO_INCREMENT,
  `JOB_NAME`     VARCHAR(45) NOT NULL,
  PRIMARY KEY (`RECORD_NUM`),
  UNIQUE INDEX `JOB_NAME_UNIQUE` (`JOB_NAME` ASC)
)
  ENGINE = InnoDB;

CREATE TABLE IF NOT EXISTS `JOB_PARAM_DATA_T` (
  `JOB_PARAM_DATA_ID` INT         NOT NULL AUTO_INCREMENT,
  `PARAM_NAME`    VARCHAR(100) NOT NULL,
  `PARAM_VALUE`   VARCHAR(2000) NOT NULL,
  `RECORD_NUM`     INT         NULL,
  PRIMARY KEY (`JOB_PARAM_DATA_ID`),
  INDEX `RECORD_NUM_idx` (`RECORD_NUM` ASC),
  INDEX `PARAM_NAME_idx` (`PARAM_NAME` ASC)
)
  ENGINE = InnoDB;

CREATE TABLE IF NOT EXISTS `ACCESSION_T` (
  `ACCESSION_ID` INT NOT NULL AUTO_INCREMENT,
  `ACCESSION_REQUEST` LONGBLOB NULL,
  `CREATED_DATE` DATETIME NULL,
  `ACCESSION_STATUS` VARCHAR(45) NULL,
  PRIMARY KEY (`ACCESSION_ID`))

ENGINE = InnoDB;

CREATE TABLE IF NOT EXISTS `JOB_T` (
  `JOB_ID` INT NOT NULL AUTO_INCREMENT,
  `JOB_NAME` VARCHAR(45) NULL,
  `JOB_DESC` VARCHAR(2000) NULL,
  `LAST_EXECUTED_TIME` DATETIME NULL,
  `NEXT_RUN_TIME` DATETIME NULL,
  `CRON_EXP` VARCHAR(45) NULL,
  `STATUS` VARCHAR(45) NULL,
  `JOB_INSTANCE_ID` INT NULL,
  PRIMARY KEY (`JOB_ID`))

ENGINE = InnoDB;

CREATE TABLE IF NOT EXISTS `DELIVERY_RESTRICTION_CROSS_PARTNER_T` (
  `DELIVERY_RESTRICTION_CROSS_PARTNER_ID` INT(11) NOT NULL AUTO_INCREMENT,
  `DELIVERY_RESTRICTIONS` VARCHAR(2000) NOT NULL,
  `INSTITUTION_ID` INT(11) NOT NULL,
  PRIMARY KEY (`DELIVERY_RESTRICTION_CROSS_PARTNER_ID`),
  KEY `FK_DELIVERY_RESTRICTION_CROSS_PARTNER_T_1_IDX` (`INSTITUTION_ID`),
  CONSTRAINT `FK_DELIVERY_RESTRICTION_CROSS_PARTNER_REQUESTING_INST` FOREIGN KEY (`INSTITUTION_ID`) REFERENCES `INSTITUTION_T` (`INSTITUTION_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION)

ENGINE=INNODB;

CREATE TABLE IF NOT EXISTS `CROSS_PARTNER_MAPPING_T` (
  `CUSTOMER_CODE_ID` INT(11) NOT NULL,
  `DELIVERY_RESTRICTION_CROSS_PARTNER_ID` INT(11) NOT NULL,
  PRIMARY KEY (`CUSTOMER_CODE_ID`,`DELIVERY_RESTRICTION_CROSS_PARTNER_ID`),
  CONSTRAINT `FK_CROSS_PARTNER_CUSTOMER_CODE` FOREIGN KEY (`CUSTOMER_CODE_ID`) REFERENCES `CUSTOMER_CODE_T` (`CUSTOMER_CODE_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `FK_DELIVERY_RESTRICTION_ID` FOREIGN KEY (`DELIVERY_RESTRICTION_CROSS_PARTNER_ID`) REFERENCES `DELIVERY_RESTRICTION_CROSS_PARTNER_T` (`DELIVERY_RESTRICTION_CROSS_PARTNER_ID`) ON DELETE NO ACTION ON UPDATE NO ACTION)

ENGINE=INNODB;

CREATE TABLE IF NOT EXISTS `MATCHING_BIB_INFO_DETAIL_T` (
  `MATCHING_BIB_INFO_DATA_DUMP_ID` int(11) NOT NULL AUTO_INCREMENT,
  `BIB_ID` varchar(45) NOT NULL,
  `OWNING_INST_BIB_ID` varchar(45) NOT NULL,
  `OWNING_INST` varchar(5) NOT NULL,
  `LATEST_RECORD_NUM` int(11) NOT NULL,
  PRIMARY KEY (`MATCHING_BIB_INFO_DATA_DUMP_ID`),
  KEY `BIB_ID_IDX` (`BIB_ID`),
  KEY `RECORD_NUM_IDX` (`LATEST_RECORD_NUM`)
) ENGINE=InnoDB;

CREATE TABLE IF NOT EXISTS `USER_T` (
  `USER_ID` INT NOT NULL,
  `LOGIN_ID` VARCHAR(45) NOT NULL,
  `USER_INSTITUTION` INT NOT NULL,
  `USER_DESCRIPTION` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`USER_ID`),
  INDEX `FK_USER_T_1_IDX` (`USER_INSTITUTION` ASC),
  CONSTRAINT `FK_USER_T_1`
    FOREIGN KEY (`USER_INSTITUTION`)
    REFERENCES `INSTITUTION_T` (`INSTITUTION_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)

ENGINE = InnoDB;


CREATE TABLE IF NOT EXISTS `ROLES_T` (
  `ROLE_ID` INT NOT NULL,
  `ROLE_NAME` VARCHAR(45) NOT NULL,
  `ROLE_DESCRIPTION` VARCHAR(80) NULL,
  PRIMARY KEY (`ROLE_ID`),
  UNIQUE INDEX `ROLE_NAME_UNIQUE` (`ROLE_NAME` ASC))

ENGINE = InnoDB;

 CREATE TABLE IF NOT EXISTS `USER_ROLE_T` (
  `USER_ID` INT NOT NULL,
  `ROLE_ID` INT NOT NULL ,
  INDEX `FK_USER_ROLE_T_1_IDX` (`USER_ID` ASC),
  INDEX `FK_USER_ROLE_T_2_IDX` (`ROLE_ID` ASC),
  CONSTRAINT `FK_USER_ROLE_T_1`
  FOREIGN KEY (`USER_ID`)
  REFERENCES `USER_T` (`USER_ID`)
  ON DELETE NO ACTION
  ON UPDATE NO ACTION,
  CONSTRAINT `FK_USER_ROLE_T_2`
  FOREIGN KEY (`ROLE_ID`)
  REFERENCES `ROLES_T` (`ROLE_ID`)
  ON DELETE NO ACTION
  ON UPDATE NO ACTION)

ENGINE = InnoDB;

CREATE TABLE IF NOT EXISTS `PERMISSIONS_T` (
  `PERMISSION_ID` INT NOT NULL,
  `PERMISSION_NAME` VARCHAR(45) NOT NULL,
  `PERMISSION_DESCRIPTION` VARCHAR(80) NULL,
  PRIMARY KEY (`PERMISSION_ID`))

ENGINE = InnoDB;

CREATE TABLE IF NOT EXISTS `ROLE_PERMISSION_T` (
  `ROLE_ID` INT NOT NULL,
  `PERMISSION_ID` INT NOT NULL,
  INDEX `FK_ROLE_PERMISSION_T_1_IDX` (`ROLE_ID` ASC),
  INDEX `FK_ROLE_PERMISSION_T_2_IDX` (`PERMISSION_ID` ASC),
  CONSTRAINT `FK_ROLE_PERMISSION_T_1`
    FOREIGN KEY (`ROLE_ID`)
    REFERENCES `ROLES_T` (`ROLE_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_ROLE_PERMISSION_T_2`
    FOREIGN KEY (`PERMISSION_ID`)
    REFERENCES `PERMISSIONS_T` (`PERMISSION_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)

ENGINE = InnoDB;

CREATE TABLE IF NOT EXISTS REQUEST_ITEM_STATUS_T (
  REQUEST_STATUS_ID int(11) NOT NULL AUTO_INCREMENT,
  REQUEST_STATUS_CODE varchar(45) NOT NULL,
  REQUEST_STATUS_DESC varchar(512) NOT NULL,
  PRIMARY KEY (REQUEST_STATUS_ID),
  UNIQUE KEY REQUEST_STATUS_CODE_UNIQUE (REQUEST_STATUS_CODE))

ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `recap`.`ITEM_BARCODE_HISTORY_T`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ITEM_BARCODE_HISTORY_T` (
  `HISTORY_ID`   INT         NOT NULL AUTO_INCREMENT,
  `OWNING_INST` VARCHAR(45) NOT NULL,
  `OWNING_INST_ITEM_ID` VARCHAR(45) NOT NULL,
  `OLD_BARCODE` VARCHAR(45) NOT NULL,
  `NEW_BARCODE` VARCHAR(45) NOT NULL,
  `CREATED_DATE`       DATETIME    NOT NULL,
  PRIMARY KEY (`HISTORY_ID`)
)
  ENGINE = InnoDB;

  -- -----------------------------------------------------
-- Table `BULK_CUSTOMER_CODE_T`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BULK_CUSTOMER_CODE_T` (
  `BULK_CUSTOMER_CODE_ID`        INT             NOT NULL AUTO_INCREMENT,
  `CUSTOMER_CODE`                VARCHAR(45)     NOT NULL,
  `DESCRIPTION`                  VARCHAR(2000)   NOT NULL,
  `OWNING_INST_ID`	             INT             NULL,
  PRIMARY KEY (`BULK_CUSTOMER_CODE_ID`),
  UNIQUE KEY `BULK_CUSTOMER_CODE_UNIQUE` (`CUSTOMER_CODE`,`OWNING_INST_ID`),
  INDEX (`CUSTOMER_CODE`),
  INDEX (`OWNING_INST_ID`),
  CONSTRAINT `BULK_CUST_CODE_OWNING_INST_ID_FK`
  FOREIGN KEY (`OWNING_INST_ID`)
  REFERENCES `INSTITUTION_T` (`INSTITUTION_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
) ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `BULK_REQUEST_ITEM_T `
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BULK_REQUEST_ITEM_T` (
  `BULK_REQUEST_ID`         INT           NOT NULL AUTO_INCREMENT,
  `BULK_REQUEST_NAME`       VARCHAR(255)  NOT NULL,
  `BULK_REQUEST_FILE_NAME`  VARCHAR(255)  NOT NULL,
  `BULK_REQUEST_FILE_DATA`  LONGBLOB      NOT NULL,
  `CREATED_BY`              VARCHAR(45)   NOT NULL,
  `CREATED_DATE`            DATETIME      NOT NULL,
  `LAST_UPDATED_DATE`       DATETIME      DEFAULT NULL,
  `PATRON_ID`               VARCHAR(45)   NOT NULL,
  `STOP_CODE`               VARCHAR(45)   NOT NULL,
  `REQUESTING_INST_ID`      INT           NOT NULL,
  `REQUEST_STATUS`          VARCHAR(45)   NOT NULL,
  `NOTES`                   VARCHAR(2000) DEFAULT NULL,
  `EMAIL_ID`                VARCHAR(100)   DEFAULT NULL,
  PRIMARY KEY (`BULK_REQUEST_ID`),
  KEY `BULK_REQUESTING_INST_ID_INDX` (`REQUESTING_INST_ID`),
  CONSTRAINT `BULK_REQUESTING_INST_ID_FK`
  FOREIGN KEY (`REQUESTING_INST_ID`)
  REFERENCES `INSTITUTION_T` (`INSTITUTION_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
) ENGINE=InnoDB;

-- -----------------------------------------------------
-- Table `BULK_REQUEST_T `
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BULK_REQUEST_T` (
  `BULK_REQUEST_ID` INT NOT NULL,
  `REQUEST_ID`      INT NOT NULL,
  PRIMARY KEY (`BULK_REQUEST_ID`,`REQUEST_ID`),
  KEY `REQUEST_ID_INTER_INDX` (`REQUEST_ID`),
  CONSTRAINT `BULK_REQUEST_ID_INTER_FK`
  FOREIGN KEY (`BULK_REQUEST_ID`)
  REFERENCES `BULK_REQUEST_ITEM_T` (`BULK_REQUEST_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `REQUEST_ID_INTER_FK`
  FOREIGN KEY (`REQUEST_ID`)
  REFERENCES `REQUEST_ITEM_T` (`REQUEST_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
) ENGINE=InnoDB;
